{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactItem.js/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactItem.js/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","views/ContactsView.js"],"names":["module","exports","label","input","container","list","title","item","text_name","text","deleteBtn","btnText","form","addBtn","Filter","dispatch","useDispatch","react_default","a","createElement","Fragment","className","s","type","name","pattern","onChange","e","setFilter","currentTarget","value","trim","ContactItem","_ref","number","id","FlexContainer","style","width","onClick","toast","success","concat","contactsOperations","deleteContact","onDelete","role","ContactList","contacts","useSelector","contactsSelectors","getContacts","filterValue","getFilterValue","useEffect","fetchContacts","getFilteredContacts","Object","toConsumableArray","filter","contact","toLowerCase","includes","length","map","key","ContactForm","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","target","onSubmit","preventDefault","data","some","error","checkNewContacts","addContact","htmlFor","placeholder","autoComplete","required","minLength","maxLength","__webpack_require__","d","__webpack_exports__","ContactsView","barStyles","display","alignItems","margin","padding","isLoading","getLoading","Helmet","Spinner","ContactForm_ContactForm","Filter_Filter","components_ContactList_ContactList"],"mappings":"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","file":"static/js/5.79a468d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1trRe\",\"input\":\"Filter_input__3O-63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__a0Isl\",\"list\":\"ContactList_list__3YuFF\",\"title\":\"ContactList_title__riggL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1MR6U\",\"text_name\":\"ContactItem_text_name__l90Ac\",\"text\":\"ContactItem_text__26TC-\",\"deleteBtn\":\"ContactItem_deleteBtn__2qtsd\",\"btnText\":\"ContactItem_btnText__elb8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3dUBa\",\"label\":\"ContactForm_label__1hvse\",\"input\":\"ContactForm_input__317W5\",\"addBtn\":\"ContactForm_addBtn__ytAHF\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nimport { useDispatch} from 'react-redux';\r\nimport {  setFilter } from '../../redux/filterSlice';\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}> Find contact by name \r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          onChange={e => dispatch(setFilter((e.currentTarget.value).trim()))}\r\n        />\r\n      </label>\r\n    </>\r\n  )\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterName: PropTypes.string\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { useDispatch } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport s from './ContactItem.module.css';\r\nimport FlexContainer from '../FlexContainer/FlexContainer';\r\n\r\nexport function ContactItem({ name, number, id }) {\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => {\r\n    toast.success(`The ${name} was deleted!`)\r\n    return dispatch(contactsOperations.deleteContact(id))\r\n  };\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <FlexContainer style={{ width: '100%' }}>\r\n        <p className={s.text +' '+ s.text_name}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button\r\n          className={s.deleteBtn}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={() => onDelete(id)}\r\n        ><span className={s.btnText}>Delete </span><span role=\"img\">‚ùå</span>\r\n        </button>\r\n      </FlexContainer>\r\n    </li>\r\n  )\r\n};","import React, { useEffect } from 'react';\r\nimport s from './ContactList.module.css';\r\nimport { getFilterValue } from '../../redux/filterSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  contactsSelectors } from '../../redux/contacts';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport { ContactItem } from '../ContactItem.js/ContactItem';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const filterValue = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n  \r\n  const getFilteredContacts = (filterValue.value === '') ? contacts\r\n    : [...contacts].filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase()));\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      {(getFilteredContacts.length) ?\r\n        (<>\r\n          <h1 className={s.title}> Contact List </h1>\r\n          <ul className={s.list}>\r\n            {getFilteredContacts.map(({ id, name, number }) =>\r\n              <ContactItem key={id} id={id} name={name} number={number} />)}\r\n          </ul>\r\n        </>)\r\n        : (<h1 className={s.title}>No contact was found</h1>)}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport toast from 'react-hot-toast';\r\nimport s from './ContactForm.module.css';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nexport const ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const checkNewContacts = (data) => {\r\n    const name = data.name.toLowerCase();\r\n    const sameContact = contacts.some(contact => contact.name.toLowerCase().includes(name));\r\n\r\n    if (sameContact) {\r\n      toast.error(`${data.name} is already in your contacts`)\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      name: name,\r\n      number: number\r\n    };\r\n\r\n    if (checkNewContacts(contact)) {\r\n      dispatch(contactsOperations.addContact(contact));\r\n      toast.success(`${name} was added to your contacts!`)\r\n      resetForm();\r\n    };\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label\r\n        className={s.label}\r\n        htmlFor=\"name\"> Name\r\n        <input\r\n          className={s.input}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\r\n          title=\"write the name with the use of letters, apostrophe, dash and spaces. For example, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc\"\r\n          placeholder=\"Contact name\"\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label\r\n        className={s.label}\r\n        htmlFor=\"number\"> Number\r\n        <input\r\n          className={s.input}\r\n          id=\"number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          minLength=\"11\"\r\n          maxLength=\"14\"\r\n          title=\"use the numeric format for the phone number\"\r\n          placeholder=\"Phone number\"\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </label>\r\n      <button\r\n        className={s.addBtn}\r\n        type=\"submit\"\r\n      >\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n};","import React from \"react\";\r\nimport Filter from '../components/Filter/Filter';\r\nimport { Helmet } from 'react-helmet';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport { ContactForm } from '../components/ContactForm/ContactForm';\r\nimport { useSelector } from \"react-redux\";\r\nimport { contactsSelectors } from \"../redux/contacts\";\r\nimport { Spinner } from \"../components/Spinner/Spinner\";\r\n\r\nconst barStyles = {\r\n  display: 'block',\r\n  alignItems: 'center',\r\n  margin: 'auto',\r\n  padding: '2rem 3rem 0',\r\n};\r\n\r\nexport default function ContactsView() {\r\n  const isLoading = useSelector(contactsSelectors.getLoading);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Contacts</title>\r\n      </Helmet>\r\n      <div style={barStyles}>\r\n        {isLoading && <Spinner />}\r\n\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}